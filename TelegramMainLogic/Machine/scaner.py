import asyncio
from aiogram import Router, types as tp, F
from aiogram.fsm.context import FSMContext
from random import randint
from utils.states import CodeData
from utils.config import process_user

router = Router()

@router.callback_query(F.data == 'scaner')
async def scaner(callback: tp.CallbackQuery, state: FSMContext) -> None:

    '''
    –ö–æ—Ä—É—Ç–∏–Ω–∞ –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–∫–∞–Ω–µ—Ä–∞.
    '''
        
    await state.clear() # –û—á–∏—â–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—é—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.

    await callback.answer()

    await callback.message.answer(
        text='–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è üî¢'
    )

    await state.set_state(CodeData.code)


@router.message(CodeData.code)
async def get_code(message: tp.Message, state: FSMContext) -> None:

    '''
    –ö–æ—Ä—É—Ç–∏–Ω–∞ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–¥–∞ –∏—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.
    '''

    await state.clear()

    await message.answer(
        text='–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é... ‚öí'
    )
    await asyncio.sleep(2)

    if message.text not in ['091283', '123026']:
        await message.answer(
            text='–û–±—ä–µ–∫—Ç —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω: <b>"Error object"</b>üö´\n–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–ø–ø–∞—Ä–∞—Ç ‚öí'
        )
        return
    
    if message.text == '091283':
        process_sleep = 5 + 1 * randint(0, 10)
        text = '''
–û–±–Ω–∞—Ä—É–∂–µ–Ω –æ–±—ä–µ–∫—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è ‚ùî
<blockquote>–ö–æ–¥ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: [0001]

–ö–æ–¥ –æ–±—ä–µ–∫—Ç–∞: [X]

–õ–æ–∫–∞—Ü–∏—è: [–°–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–π–æ–Ω]

–§–æ—Ä–º–∞ –æ–±—ä–µ–∫—Ç–∞: [–†–∞—Å—Ç–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å]

–û–ø–∏—Å–∞–Ω–∏–µ: –°—Ä–µ–¥–∞ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ –∞–≥—Ä–µ—Å–∏–≤–Ω–∞, –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–∫—Ä—ã—Ç—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ - –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ —Å—Ä–µ–¥–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø–∞—Å–Ω–æ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è. –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–¥ —Ä–∞–∑—É–º–æ–º.

–£–∫–∞–∑–∞–Ω–∏—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å—Ä–µ–¥–µ"</blockquote>
'''

    elif message.text == '123026':
        process_sleep = 5 + 1 * randint(0, 5)
        text = '''
–û–±–Ω–∞—Ä—É–∂–µ–Ω –æ–±—ä–µ–∫—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è ‚ùî
<blockquote>–ö–æ–¥ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è: [0010]

–ö–æ–¥ –æ–±—ä–µ–∫—Ç–∞: [T]

–õ–æ–∫–∞—Ü–∏—è: [–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä–∞–π–æ–Ω]

–§–æ—Ä–º–∞ –æ–±—ä–µ–∫—Ç–∞: [–ë–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è, –º—É—Ç–∞—Ü–∏—è]

–û–ø–∏—Å–∞–Ω–∏–µ: –û–±—ä–µ–∫—Ç –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏—è, –≤ –≥–µ–Ω–æ–º–µ –æ–±—ä–µ–∫—Ç–∞ –∑–∞–º–µ—á–µ–Ω –º—É—Ç–∞–≥–µ–Ω —Ä–∞–Ω–µ–µ –∏–∑—É—á–µ–Ω–æ–≥–æ —Ç–∏–ø–∞ - ¬´T-Virus¬ª.</blockquote>
'''

    edit_msg = await message.answer(
        text=f'–ù–∞—á–∞–ª–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è üì°\n–í—Ä–µ–º—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {process_sleep} –º–∏–Ω. ‚è≥'
    )

    while True:
        await asyncio.sleep(60)
        process_sleep -= 1

        await edit_msg.edit_text(
            text=f'–ù–∞—á–∞–ª–æ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è üì°\n–í—Ä–µ–º—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {process_sleep} –º–∏–Ω. ‚è≥'
        )

        if process_sleep == 0:
            break

    await message.answer(
        text=text
    )

    user_id = message.from_user.id

    if user_id in process_user:
        if message.text not in process_user[user_id]:
            process_user[user_id].append(message.text)
    else:
        process_user[user_id] = [message.text]
